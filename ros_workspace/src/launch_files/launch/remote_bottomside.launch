<launch>
   <machine name="bottomside" address="192.168.1.111" default="true" user="pi" password="JHSRobo"/>

 <!-- horizontal vector drive node -->
   <node machine="bottomside" pkg="vector_drive" type="horiz_drive" name="horiz_drive"/>

 <!-- vertical vector drive node -->
    <node machine="bottomside" pkg="vector_drive" type="vert_drive" name="vert_drive"/>

 <!-- harware interface -->
   <node machine="bottomside" respawn="true" pkg="hardware_interface" type="hw_thruster_controller_interface.py" name="hw_thruster_controller_interface">
      <param name="thrusterControllerPort" type="string" value="/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0"/>
   </node>

   <!-- camera switching and tools -->
   <node machine="bottomside" pkg="hardware_interface" ns="rov" type="cameraSwitch.py" name="cameraSwitch"/>
   <node machine="bottomside" pkg="hardware_interface" ns="rov" type="hw_electromagnet_control.py" name="hw_electromagnet_control"/>
   <node machine="bottomside" pkg="hardware_interface" ns="rov" type="trout_grout_control.py" name="trout_grout_control"/>


  <!-- start rpi pilot cameras -->
  <node machine="bottomside" type="raspicam_node" pkg="raspicam_node" name="raspicam_node" output="screen">
    <param name="camera_info_url" value="package://raspicam_node/camera_info/camerav2_1280x960.yaml"/>
    <param name="width" value="1280"/>
    <param name="height" value="960"/>
    <param name="quality" value="100"/>
    <param name="framerate" value="30"/>
    <param name="camera_frame_id" value="pilot_cam"/>
  </node>

 <!-- start reading sensor data from DRQ1250s -->
 <!-- respawn setup to restart the node every 30 seconds if it dies-->
 <node machine="bottomside" pkg="drq1250" type="drq1250_ros.py" name="drq1250" args="0x08" respawn="true" respawn_delay="30" ns="rov/drq1250_1"/>

 <node machine="bottomside" pkg="drq1250" type="drq1250_ros.py" name="drq1250" args="0x0A" respawn="true" respawn_delay="30" ns="rov/drq1250_2"/>

 <!-- start reading the depth sensor -->
 <!-- respawn setup to restart the node every 30 seconds if it dies-->
 <node machine="bottomside" pkg="ms5837" name="depth_sensor" type="ms5837_ros.py" respawn="true" respawn_delay="30"/>

 <!-- launch all the sensors -->
 <!-- respawn setup to restart the node every 30 seconds if it dies-->
 <!-- <node machine="bottomside" type="sensor-hat.py" pkg="sensor_readout" name="sensor_interface" respawn="true" respawn_delay="30"/> -->
 <node machine="bottomside" type="bno055_ros.py" pkg="bno055" name="imu" respawn="true" respawn_delay="30"/>

</launch>
